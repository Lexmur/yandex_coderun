Фуф, это было непросто, но методы и функции снова выстроились в почётный караул, двери замка распахнулись… Осталось лишь подняться по широкой парадной лестнице.

Но — что это? Лестница сломана! Каждая ступенька должна быть чуть выше или хотя бы такой же, как предыдущая — чтобы подниматься было удобно и безопасно. Но кто-то нарочно изменил высоты ступенек!

— «Кажется, кто-то снова пытается испортить нам праздник…» — расстраивается Кодерун.

Может быть, у тебя получится починить лестницу? Ты можешь развернуть ступеньку, просто изменив знак её высоты: любую ступеньку с высотой a_i можно превратить в −a_i.

Нужно понять, можно ли так починить лестницу, чтобы её высоты шли не убывая.

Формат ввода
В качестве аргументов функции передаются 2 параметра:

 - Целое число n − количество ступенек (1≤n≤100 000).
 - Одномерный массив целых чисел a (|a_i∣≤100000) − массив высот ступенек (∣a_i∣≤100 000).

Формат вывода
В качестве ответа ваша функция должна вернуть массиве result n+1, где:
 - result[0] = 0 - если решение не существует, result[0] = 1 в противном случае.
 - При анализе решения: result[1...n] содержит n чисел result[i], которвые образуют неубываюущий массив, и для всех 
1≤i≤n выполянется result[i]= a_i или result[i] = -a_i

Ограничения
Ограничение времени
2 с

Ограничение памяти
256 МБ

Пример 1
Ввод
5
1 -1 -2 3 6
Вывод
Yes
-1 -1 2 3 6 

Пример 2
Ввод
3
1 1 0
Вывод 
Yes
-1 -1 0 

Пример 3
Ввод
10
-35808 88285 25933 -88676 -14525 11664 -14736 -35961 48607 33654
Вывод
No