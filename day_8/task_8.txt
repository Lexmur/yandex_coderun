Сад ожил — из серых плит вырвались цветы, стены покрылись мозаикой из листвы, а потолок расцвёл цифровыми облаками и светом. Всё вокруг зазеленело, зашевелилось, запело...

Но вдруг — внезапный шум из бального зала. Неужели опять что-то случилось?

Оркестр уже готовился сыграть любимые произведения принцессы. Но беда! Кто-то перемешал все страницы партитур. Теперь музыканты не знают, какие именно страницы стоит сыграть — ведь каждая из них отражает, насколько принцессе нравится определённый отрезок мелодии.

Мы знаем, что Принцесса Брейс точно сделает q музыкальных запросов. Каждый запрос — это диапазон от страницы l до страницы r включительно.

На каждой странице — число, обозначающее её «приязнь» к этому фрагменту. Однако порядок страниц можно изменить.

Ваша задача — переложить все n страниц партитуры так, чтобы суммарная радость принцессы от всех сыгранных отрывков была максимальной.

Формат ввода
 - Первые два аргумента функции - целые числа n и q (1≤n,q≤10^5)
 - Третий аргумент - массив из n целых чисел a_i, задающих "приязнь" принцессы к странице с номером i(1≤a_i≤10^8)
 - Четвёртый аргемент - массив из q пар чисел l и r (1≤l≤r≤n), обозначающих запрос принцессы.

Формат вывода
Верните в функции максимальную возможную суммарную радость принцессы от проигранных оркестром отрывков после перестановки страниц.

Пример 1
Ввод
3 4
7 3 1
1 3
2 3
3 3
2 2
Вывод
31

Пример 2
Ввод
4 4
1 100 10000 10101010
1 4
2 3
2 2
1 2
Вывод
40424241

---ИДЕЯ РЕШЕНИЯ---

Нам нужно посчитать частоту появления каждой страницы, а затем самой часто втречающейся поставить в соответсвие максимальную "приязнь" и далее по убыванию.

Частоту будем запоминать с использованием разностного массива, что позволяет ускроить расчёт. По индексу начала отрезка добавляем единицу, по индеккусу (конца +1) отнимает единицу
Например есть массив из 5 элементов [0,0,0,0,0], расширяем его на 1, получаем [0,0,0,0,0,0].
Допустим нам нужно использовать элементы с 2 по 4, тогда по индексу 2 доблавляем 1, по индексу 4+1 вычитаем.
[0,0,1,0,0,-1]
Восстановление происходит по форуле:
a[n] = a[n-1] + dif[n];
a[0] = dif[0] = 0
a[1] = 0 + dif[1] = 0
a[2] = 0 + dif[2] = 1
a[3] = 1 + dif[3] = 1
a[4] = 1 + dif[4] = 1
Вот и получилось, что мы действительно взяли все элементы со 2 по 4.

Далее сортируем массив приязней и массив частот(неважно оба по возрастанию или убыванию, главное чтобы одинаково). В сумму записываем произведение частоты на приязнь.





